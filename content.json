{"meta":{"title":"小白&小柚子的博客","subtitle":null,"description":null,"author":"Licheng","url":"http://yoursite.com"},"pages":[],"posts":[{"title":"ReactNative拉起微信获取发票","slug":"ReactNative拉起微信获取发票","date":"2018-07-11T01:42:20.768Z","updated":"2018-07-11T01:42:56.053Z","comments":true,"path":"2018/07/11/ReactNative拉起微信获取发票/","link":"","permalink":"http://yoursite.com/2018/07/11/ReactNative拉起微信获取发票/","excerpt":"","text":"开个头再整理。。。。","categories":[],"tags":[]},{"title":"关于HTTPS","slug":"HTTPS","date":"2018-03-23T07:38:03.594Z","updated":"2018-03-24T07:23:47.184Z","comments":true,"path":"2018/03/23/HTTPS/","link":"","permalink":"http://yoursite.com/2018/03/23/HTTPS/","excerpt":"","text":"背景 iOS 9.0 引入了新特性App Transport Security (ATS) 详情：App Transport Security (ATS) 苹果正在加大应用安全的管控，这个举措可以看出苹果对信息安全的重视，也暴露出大部分应用传输数据时都是未经过加密的，或使用私有方式加密，以至于苹果开始对开发者提出要求。 私有加密虽然一定程度上是安全的，但是终究不是一个长久之计。全世界这么多安全专家在维护HTTPS安全，早日使用HTTPS确保信息安全才是王道！也省去了私有加密协议的安全隐患！ 关于网络协议 OSI(开放式系统互联), 由ISO(国际化标准组织)制定 应用层 表示层 会话层 传输层 网络层 数据链接层 物理层TCP/IP 应用层, HTTP(S), FTP, SMTP, DNS 传输层, TCP, UDP 网络层, IP 链路层(网络接口层), ARP, RARPTCP/IP通讯协议采用了4层的层级结构，每一层都呼叫它的下一层所提供的网络来完成自己的需求。HTTP(短连接) 建立链接, 三次握手 断开链接, 四次挥手数据报文-&gt;数据包-&gt;数据帧-&gt;比特流(二进制)–&gt;比特流-&gt;数据帧-&gt;数据包-&gt;数据报文socket, “插口”, “套接字”, 长连接, 存在于应用层和传输层之间, 提供一种封装, 方便进行通信 什么是HTTPS超文本传输安全协议（英语：Hypertext Transfer Protocol Secure，缩写：HTTPS，常称为HTTP over TLS，HTTP over SSL或HTTP Secure）是一种网络安全传输协议。 HTTPS过程 1.客户端发起HTTPS请求 这个没什么好说的，就是用户在浏览器里输入一个https网址，然后连接到server的443端口。 2.服务端的配置 采用HTTPS协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请。区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面(startssl就是个不错的选择，有1年的免费服务)。这套证书其实就是一对公钥和私钥。如果对公钥和私钥不太理解，可以想象成一把钥匙和一个锁头，只是全世界只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。 3.传送证书 这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。 4.客户端解析证书 这部分工作是有客户端的TLS来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，提示证书存在问题。如果证书没有问题，那么就生成一个随机值。然后用证书对该随机值进行加密。就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。 5.传送加密信息 这部分传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。 6.服务段解密信息 服务端用私钥解密后，得到了客户端传过来的随机值(私钥)，然后把内容通过该值进行对称加密。所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。 7.传输加密后的信息 这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。 8.客户端解密信息 客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容。整个过程第三方即使监听到了数据，也束手无策。 总结后续 深入了解TCP/IP协议 深入了解Socket HTTP连接与Socket连接 抓取https数据","categories":[],"tags":[]},{"title":"关于Reveal","slug":"是什么是Reveal？","date":"2018-03-16T09:08:19.298Z","updated":"2018-03-23T07:37:11.305Z","comments":true,"path":"2018/03/16/是什么是Reveal？/","link":"","permalink":"http://yoursite.com/2018/03/16/是什么是Reveal？/","excerpt":"","text":"什么是Reveal？Reveal的安装Reveal的好处","categories":[],"tags":[]},{"title":"关于负面情绪","slug":"为什么人们愿意沉浸在负面情绪中？","date":"2018-02-23T02:05:13.753Z","updated":"2018-02-23T02:22:12.840Z","comments":true,"path":"2018/02/23/为什么人们愿意沉浸在负面情绪中？/","link":"","permalink":"http://yoursite.com/2018/02/23/为什么人们愿意沉浸在负面情绪中？/","excerpt":"","text":"为什么人们愿意沉浸在负面情绪中？很简单，因为当你沉浸在负面情绪中时，你有着强烈的安全感。你没有看错，你在负面情绪中时感到安全，所以迟迟不愿走出来。当你觉得自己是个loser的时候，你可以不必为生活的糟糕负责，你的女朋友离你而去是因为她拜金她花心她没耐心，你的事业不成是公司太差同事欺压老板没眼光，你的性格孤僻压抑是因为父母冷漠环境限制师长冷冰冰。当你一遍一遍沉浸在负面情绪中时，你加强了对自我身份感的认同，你从中逃避了你本该承担的责任。在你的幻想中，你是受害者，受害者是无辜者，而无辜者最值得的补偿就是同情；在你的幻想中，你无比的同情你自己。于是，你安全了，你不焦虑了。你相信了你自己，你就输了全世界。https://www.zhihu.com/question/26444778/answer/37323264","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-02-05T08:46:13.171Z","updated":"2018-02-05T08:46:13.171Z","comments":true,"path":"2018/02/05/hello-world/","link":"","permalink":"http://yoursite.com/2018/02/05/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"The First Blog","slug":"我的第一篇博客","date":"2018-02-05T08:46:13.171Z","updated":"2018-02-05T12:32:55.542Z","comments":true,"path":"2018/02/05/我的第一篇博客/","link":"","permalink":"http://yoursite.com/2018/02/05/我的第一篇博客/","excerpt":"","text":"我的第一篇博客Objective-C的类可以多继承么?1.什么是多继承？ 多继承：即一个子类可以有多个父类，它继承了多个父类的特性。 2.为什么没有多继承？ 由于消息机制名字查找发生在运行时而非编译时，很难解决多个基类可能导致的二义性问题。 3.怎么实现多继承？ 消息转发runtime 参考链接 delegate和protocol 参考链接 类别 categroy 参考链接 组合模式 ？参考链接 4.思考：为毛要使用多继承呢？多继承的好处及应用？ http://blog.csdn.net/b735098742/article/details/79060313 5. NSProxy 实现多继承 https://www.jianshu.com/p/923f119333d8 http://www.cocoachina.com/ios/20161026/17857.htmls 6.参考资料 http://blog.csdn.net/gongwutianya/article/details/51501800","categories":[],"tags":[]}]}